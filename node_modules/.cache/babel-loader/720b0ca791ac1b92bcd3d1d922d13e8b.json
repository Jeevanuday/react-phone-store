{"ast":null,"code":"var _jsxFileName = \"/Users/ju055643/Desktop/PHONE_STORE/src/context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = (id, count) => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      product.total = product.price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.price * product.count;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.price * product.count;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotal();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotal();\n      });\n    };\n\n    this.addTotal = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => {\n        subTotal += item.total;\n      });\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n      console.log(this.state.cartSubTotal);\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart,\n        addTotal: this.addTotal\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/ju055643/Desktop/PHONE_STORE/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","count","index","indexOf","inCart","total","price","addTotal","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","console","log","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  state = {\n    products: [],\n    detailProduct: detailProduct,\n    cart: [],\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  };\n  componentDidMount() {\n    this.setProducts();\n  }\n  setProducts = () => {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item };\n      tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return { products: tempProducts };\n    });\n  };\n  getItem = id => {\n    const product = this.state.products.find(item => item.id === id);\n    return product;\n  };\n  handleDetail = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { detailProduct: product };\n    });\n  };\n  addToCart = (id, count) => {\n    let tempProducts = [...this.state.products];\n    const index = tempProducts.indexOf(this.getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    product.total = product.price;\n    this.setState(\n      () => {\n        return { products: tempProducts, cart: [...this.state.cart, product] };\n      },\n      () => {\n        this.addTotal();\n      }\n    );\n  };\n  openModal = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { modalProduct: product, modalOpen: true };\n    });\n  };\n  closeModal = () => {\n    this.setState(() => {\n      return { modalOpen: false };\n    });\n  };\n  increment = id => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count + 1;\n    product.total = product.price * product.count;\n    this.setState(\n      () => {\n        return { cart: [...tempCart] };\n      },\n      () => {\n        this.addTotal();\n      }\n    );\n  };\n  decrement = id => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count - 1;\n    if (product.count === 0) {\n      this.removeItem(id);\n    } else {\n      product.total = product.price * product.count;\n      this.setState(\n        () => {\n          return { cart: [...tempCart] };\n        },\n        () => {\n          this.addTotal();\n        }\n      );\n    }\n  };\n  removeItem = id => {\n    let tempProducts = [...this.state.products];\n    let tempCart = [...this.state.cart];\n    tempCart = tempCart.filter(item => item.id !== id);\n    const index = tempProducts.indexOf(this.getItem(id));\n    let removedProduct = tempProducts[index];\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n\n    this.setState(\n      () => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      },\n      () => {\n        this.addTotal();\n      }\n    );\n  };\n  clearCart = () => {\n    this.setState(\n      () => {\n        return { cart: [] };\n      },\n      () => {\n        this.setProducts();\n        this.addTotal();\n      }\n    );\n  };\n  addTotal = () => {\n    let subTotal = 0;\n    this.state.cart.map(item => {\n      subTotal += item.total;\n    });\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    this.setState(() => {\n      return {\n        cartSubTotal: subTotal,\n        cartTax: tax,\n        cartTotal: total\n      };\n    });\n    console.log(this.state.cartSubTotal);\n  };\n  render() {\n    return (\n      <ProductContext.Provider\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart,\n          addTotal: this.addTotal\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}